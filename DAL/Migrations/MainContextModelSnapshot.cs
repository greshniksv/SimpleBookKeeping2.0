// <auto-generated />
using System;
using DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.DbModels.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid")
                        .HasColumnName("plan_id");

                    b.HasKey("Id")
                        .HasName("pk_costs");

                    b.HasIndex("PlanId")
                        .HasDatabaseName("ix_costs_plan_id");

                    b.ToTable("costs", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.CostDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CostId")
                        .HasColumnType("uuid")
                        .HasColumnName("cost_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int>("Value")
                        .HasColumnType("integer")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_cost_details");

                    b.HasIndex("CostId")
                        .HasDatabaseName("ix_cost_details_cost_id");

                    b.ToTable("cost_details", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Balance")
                        .HasColumnType("integer")
                        .HasColumnName("balance");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_plans");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_plans_user_id");

                    b.HasIndex("UserId", "Start", "End")
                        .HasDatabaseName("ix_plans_user_id_start_end");

                    b.ToTable("plans", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.PlanMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid")
                        .HasColumnName("plan_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_plan_members");

                    b.HasIndex("PlanId")
                        .HasDatabaseName("ix_plan_members_plan_id");

                    b.HasIndex("UserId", "PlanId")
                        .HasDatabaseName("ix_plan_members_user_id_plan_id");

                    b.ToTable("plan_members", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.Spend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<Guid>("CostDetailId")
                        .HasColumnType("uuid")
                        .HasColumnName("cost_detail_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<int>("Value")
                        .HasColumnType("integer")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_spends");

                    b.HasIndex("CostDetailId")
                        .HasDatabaseName("ix_spends_cost_detail_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_spends_user_id");

                    b.ToTable("spends", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.Cost", b =>
                {
                    b.HasOne("DAL.DbModels.Plan", "Plan")
                        .WithMany("Costs")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_costs_plans_plan_id");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("DAL.DbModels.CostDetail", b =>
                {
                    b.HasOne("DAL.DbModels.Cost", "Cost")
                        .WithMany("CostDetails")
                        .HasForeignKey("CostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cost_details_costs_cost_id");

                    b.Navigation("Cost");
                });

            modelBuilder.Entity("DAL.DbModels.PlanMember", b =>
                {
                    b.HasOne("DAL.DbModels.Plan", "Plan")
                        .WithMany("PlanMembers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_plan_members_plans_plan_id");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("DAL.DbModels.Spend", b =>
                {
                    b.HasOne("DAL.DbModels.CostDetail", "CostDetail")
                        .WithMany("Spends")
                        .HasForeignKey("CostDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_spends_cost_details_cost_detail_id");

                    b.Navigation("CostDetail");
                });

            modelBuilder.Entity("DAL.DbModels.Cost", b =>
                {
                    b.Navigation("CostDetails");
                });

            modelBuilder.Entity("DAL.DbModels.CostDetail", b =>
                {
                    b.Navigation("Spends");
                });

            modelBuilder.Entity("DAL.DbModels.Plan", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("PlanMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
