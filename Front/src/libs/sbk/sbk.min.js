

// -= Auto generated 21-11-2024 00:43:11 =-


// #### auth.js
﻿class Auth {

    getToken(userName, password, onSuccess, onError) {

        $.ajax({
            url: BASE_HOST + '/connect/token',
            method: 'post',
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            data: "grant_type=password&username=" + userName + "&password=" + password + "&client_id=client",
            success: function (data) {
                data["created"] = new Date();
                localStorage.setItem('auth', JSON.stringify(data));

                if (typeof onSuccess != "undefined") {
                    onSuccess();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // xhr.status - status code
                console.log("Error AUTH: " + xhr + "Code:" + xhr.status);

                if (typeof onError != "undefined") {
                    onError();
                }
            }
        });
    }

    refreshToken(onSuccess, onError) {

        var data = JSON.parse(localStorage.getItem('auth'));

        if (typeof data == "undefined") {
            console.log("refreshToken. There is no 'auth' in localStorage");
            return;
        }

        var refresh_token = data.refresh_token;

        if (typeof refresh_token == "undefined") {
            console.log("refreshToken. There is no 'refresh_token' in 'auth' in localStorage");
            return;
        }

        $.ajax({
            url: BASE_HOST + '/connect/token',
            method: 'post',
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            data: "grant_type=refresh_token&client_id=client&refresh_token=" + refresh_token,
            success: function (data) {
                data["created"] = new Date();
                localStorage.setItem('auth', JSON.stringify(data));

                if (typeof onSuccess != "undefined") {
                    onSuccess();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // xhr.status - status code
                console.log("Error AUTH: " + xhr + "Code:" + xhr.status);

                if (typeof onError != "undefined") {
                    onError();
                }
            }
        });
    }
}

// #### base-api.js
﻿

// #### request-engine.js
﻿class RequestEngine {

    Execute(request) {
        if (request instanceof Request) {
            console.log("Request has invalid type: " + request.constructor.name);
            return;
        }

        var token = JSON.parse(localStorage.getItem('auth')).access_token;

        $.ajax({
            url: BASE_HOST + request.url,
            method: request.method,
            dataType: request.dataType,
            contentType: request.contentType,
            data: request.data,
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {

                if (typeof request.onSuccess != "undefined") {
                    request.onSuccess(data);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {

                if (typeof request.onError != "undefined") {
                    request.onError(data);
                }
            }
        });
    }
}

// #### settings.js
﻿var BASE_HOST = "https://localhost:6001"

// #### tools.js
﻿class Tools {
    static ShowLoading() {
        $.blockUI({
            message: $('div.block-ui'),
            fadeIn: 700,
            fadeOut: 700,
            //timeout: 2000,
            showOverlay: true,
            centerY: true,
            css: {
                //width: '350px',
                //top: '10px',
                //left: '',
                //right: '10px',
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .6,
                color: '#fff'
            }
        }); 
    }

    static HideLoading() {
        $.unblockUI();
    }

}

// #### auth_dialog.js
﻿class AuthDialog {

    static Show() {
        $.blockUI({
            message: $('#login_form'),
            css: { width: '80%', left: '10%' }
        });
    }

    static Login(username, password, onSuccess, onError) {
        var auth = new Auth();
        auth.getToken(username, password, onSuccess, onError);
    }
}

// #### request.js
﻿class Request {
    constructor() {
        this.url = undefined;
        this.method = undefined;
        this.dataType = undefined;
        this.contentType = undefined;
        this.data = undefined;
        this.onSuccess = undefined;
        this.onError = undefined;
    }

    static Post(url, data, onSuccess, onError) {
        var request = new Request();
        request.url = url;
        request.method = 'post';
        request.dataType = "json";
        request.contentType = "application/json";
        request.data = data;
        request.onSuccess = onSuccess;
        request.onError = onError;
        return request;
    }
}